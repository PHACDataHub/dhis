# Define a service account for DNS01 challenge solver. This account is used by cert-manager to automate the process
# of completing the DNS01 challenge for issuing TLS certificates. Such automation is crucial for securing applications
# with valid SSL certificates without manual intervention.
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata:
  name: dns01-solver  # The unique name of the service account within the namespace.
  namespace: cnrm-system  # Namespace where the service account is scoped. cnrm-system is typically used for cloud resource management.
  annotations:
    cnrm.cloud.google.com/state-into-spec: merge  # Instructs Config Connector to merge the observed state into the 'spec'. This is useful for ensuring that manual changes in GCP are reflected in the Kubernetes resource spec.
spec:
  displayName: dns01-solver  # Human-readable name of the service account.
  description: To complete DNS01 Challenge for cert-manager  # Description providing insight into the account's purpose.

---

# This service account is designated for backup operations of Cloud Native PostgreSQL instances. It encapsulates
# permissions necessary to interact with GCP buckets for storing database backups. Ensuring data durability and
# recovery capabilities are paramount for any database architecture.
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata:
  name: dhis2-postgis-backup  # Identifies the service account used for backing up DHIS2 PostGIS databases.
  namespace: cnrm-system  # Defines the Kubernetes namespace associated with cloud resource management.
  annotations:
    cnrm.cloud.google.com/state-into-spec: merge  # Ensures synchronization between GCP and Kubernetes configurations.
spec:
  displayName: dhis2-postgis-backup  # A descriptive name for the service account, making its purpose clear at a glance.
  description: To backup cloudnative postgis in a gcp bucket  # Clarifies the role of this account in the backup process.

---

# A service account created to interact with Google Cloud KMS for secrets decryption. This is particularly used within
# the flux kustomize controller to decrypt Kubernetes manifests, enabling secure management of sensitive configurations
# like passwords or API keys without storing them plaintext in source repositories.
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata:
  name: sops-kms  # Service account name, unique within the namespace.
  namespace: cnrm-system  # The namespace dedicated to cloud resource management.
  annotations:
    cnrm.cloud.google.com/state-into-spec: merge  # Reflects manual changes in GCP back to the Kubernetes resource spec, promoting infrastructure as code practices.
spec:
  displayName: sops-kms  # The display name for the service account.
  description: To decrypt secrets within flux kustomize controller  # Explains the service account's role in secret management within the CI/CD pipeline.
